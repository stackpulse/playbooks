apiVersion: stackpulse.io/v1
kind: Playbook
metadata:
  name: create-incident-war-room
parameters:
  - name: "notificationChannel"
    type: var
    description: "The name of the channel you would like to notify about the incident (without a #)."
  - name: "zoomAPIKey"
    type: secret
    description: "Zoom API Key."
  - name: "zoomAPISecret"
    type: secret
    description: "Zoom API Secret."
  - name: "pagerDutyToken"
    type: secret
    description: "PagerDuty API Token."
  - name: "pagerDutyService"
    type: var
    description: "The name of the PagerDuty service you would wish to page the on call for."
  - name: "slackIntegrationName"
    type: integration
    description: "Slack integration."
    options:
      integration_type: slack
steps:
- name: us-docker.pkg.dev/stackpulse/public/zoom/meeting/create
  id: zoom_create_meeting
  env:
    HOST_EMAIL: "{{ $.event.Reporter }}"
    MEETING_TOPIC: "StackPulse War Room for Incident {{ $.event.Name }} ({{ $.event.ID }})"
    ZOOM_API_KEY: '{{ secret $.params.zoomAPIKey }}'
    ZOOM_API_SECRET: '{{ secret $.params.zoomAPISecret }}'
- name: us-docker.pkg.dev/stackpulse/public/slack/channel/create
  id: slack_create_war_room_channel
  env:
    CHANNEL_NAME: "incident {{ $.event.Name }} {{$.event.ID }}"
    PURPOSE: '{{ $.event.Description }}'
    TOPIC: "StackPulse War Room Channel for Incident {{ $.event.Name }} ({{ $.event.ID }})\n Zoom meeting link - {{ $.join_url }}"
    USERS: '{{ $.event.Reporter }}'
  envFrom:
    integrationRef: '{{ $.params.slackIntegrationName }}'
- name: us-docker.pkg.dev/stackpulse/public/stackpulse/incident/update
  id: attach_war_room_channel_to_incident
  env:
    INCIDENT_ID: '{{ $.event.ID }}'
    SLACK_WAR_ROOM_NAME: '{{ $.channel_name }}'
  envFrom:
    integrationRef: '{{ $.params.slackIntegrationName }}'
- name: us-docker.pkg.dev/stackpulse/public/slack/message/dynamic
  id: slack_alert_notification_channel
  env:
    SP_REDIRECT_URL: https://app.stackpulse.io/execution/{{ $.execution.id }}
    MESSAGE_TEXT: "@channel, StackPulse created an incident https://app.stackpulse.io/incident/{{ $.event.ID }}\nA War Room was created - #{{ $.channel_name }}\n A Zoom Meeting was created - {{ $.join_url }} "
    RECIPIENTS: "#{{ $.params.notificationChannel }}"
  envFrom:
    integrationRef: '{{ $.params.slackIntegrationName }}'
- name: us-docker.pkg.dev/stackpulse/public/slack/message/dynamic
  id: slack_alert_war_room_channel
  env:
    SP_REDIRECT_URL: https://app.stackpulse.io/execution/{{ $.execution.id }}
    MESSAGE_TEXT: "@channel, StackPulse created an incident https://app.stackpulse.io/incident/{{ $.event.ID }}\nA War Room was created - #{{ $.channel_name }}\n A Zoom Meeting was created - {{ $.join_url }}"
    RECIPIENTS: "#{{ $.channel_name }}"
  envFrom:
    integrationRef: '{{ $.params.slackIntegrationName }}'
# interactively ask the reporter whether to page the on caller on PagerDuty
- name: us-docker.pkg.dev/stackpulse/public/slack/message/interactive
  id: slack_ask_on_caller_paging
  env:
    DEFAULT_RESPONSE: "No"
    QUESTION: "Would you like to page the on-caller?"
    RECIPIENTS: '{{ $.event.Reporter }}'
    RESPONSES: "Yes,No"
    TIMEOUT: 2m
  envFrom:
    integrationRef: '{{ $.params.slackIntegrationName }}'
- name: us-docker.pkg.dev/stackpulse/public/pagerduty/incident/create
  id: pagerduty_incident_create
  when: '{{ ieq $.slack_response "Yes" }}'
  env:
    PAGERDUTY_TOKEN: '{{ secret $.params.pagerDutyToken }}'
    PAGERDUTY_USER_EMAIL: '{{ $.event.Reporter }}'
    SERVICE_NAME: '{{ $.params.pagerDutyService }}'
    TITLE: '{{ $.event.Name | kebabcase }}-{{ $.event.ID | kebabcase }}'
    URGENCY: '{{ if ieq $.event.Severity "normal" }}low{{ else }}high{{ end }}'
